{"version":3,"sources":["Components/InputTodo.jsx","Components/InCompleteTodos.jsx","Components/CompleteTodos.jsx","App.jsx","index.js"],"names":["style","backgroundColor","width","height","padding","margin","borderRadius","InputTodo","props","todoText","onChange","onClick","disabled","placeholder","value","InCompleteTodos","todos","onClickComplete","onClickDelete","className","map","todo","index","CompleteTodos","onClickBack","App","useState","setTodoText","incompleteTodos","setIncompleteTodos","completeTodos","setCompleteTodos","event","target","newTodos","length","color","newIncompleteTodos","splice","newCompleteTodos","ReactDOM","render","document","getElementById"],"mappings":"iMAGMA,EAAQ,CACZC,gBAAiB,UACjBC,MAAO,QACPC,OAAQ,OACRC,QAAS,MACTC,OAAQ,MACRC,aAAc,OAGHC,EAAY,SAACC,GACxB,IAAQC,EAA0CD,EAA1CC,SAAUC,EAAgCF,EAAhCE,SAAUC,EAAsBH,EAAtBG,QAASC,EAAaJ,EAAbI,SACrC,OACE,sBAAKZ,MAAOA,EAAZ,UACE,uBACEY,SAAUA,EACVC,YAAY,yBACZC,MAAOL,EACPC,SAAUA,IAEZ,wBAAQE,SAAUA,EAAUD,QAASA,EAArC,8BCpBOI,EAAkB,SAACP,GAC9B,IAAQQ,EAA0CR,EAA1CQ,MAAOC,EAAmCT,EAAnCS,gBAAiBC,EAAkBV,EAAlBU,cAChC,OACE,sBAAKC,UAAU,kBAAf,UACE,mBAAGA,UAAU,QAAb,0CACA,6BACGH,EAAMI,KAAI,SAACC,EAAMC,GAChB,OAGE,cAFA,CAEA,OAAgBH,UAAU,WAA1B,UACE,6BAAKE,IACL,wBAAQV,QAAS,kBAAMM,EAAgBK,IAAvC,0BACA,wBAAQX,QAAS,kBAAMO,EAAcI,IAArC,4BAHQD,YCVTE,EAAgB,SAACf,GAC5B,IAAQQ,EAAuBR,EAAvBQ,MAAOQ,EAAgBhB,EAAhBgB,YACf,OACE,sBAAKL,UAAU,gBAAf,UACE,mBAAGA,UAAU,QAAb,oCACA,6BACGH,EAAMI,KAAI,SAACC,EAAMC,GAChB,OACE,sBAAgBH,UAAU,WAA1B,UACE,6BAAKE,IACL,wBAAQV,QAAS,kBAAMa,EAAYF,IAAnC,4BAFQD,YCJTI,EAAM,WAEjB,MAAgCC,mBAAS,IAAzC,mBAAOjB,EAAP,KAAiBkB,EAAjB,KAEA,EAA8CD,mBAAS,IAAvD,mBAAOE,EAAP,KAAwBC,EAAxB,KAEA,EAA0CH,mBAAS,IAAnD,mBAAOI,EAAP,KAAsBC,EAAtB,KAyCA,OACE,qCACE,cAAC,EAAD,CACEtB,SAAUA,EACVC,SA1CmB,SAACsB,GAAD,OAAWL,EAAYK,EAAMC,OAAOnB,QA2CvDH,QAxCa,WACjB,GAAiB,KAAbF,EAAJ,CACA,IAAMyB,EAAQ,sBAAON,GAAP,CAAwBnB,IACtCoB,EAAmBK,GACnBP,EAAY,MAqCRf,SAAUgB,EAAgBO,QAAU,IAErCP,EAAgBO,QAAU,GACzB,mBAAGnC,MAAO,CAAEoC,MAAO,OAAnB,8EAEF,cAAC,EAAD,CACEpB,MAAOY,EACPX,gBAhCkB,SAACK,GAEvB,IAAMe,EAAkB,YAAOT,GAC/BS,EAAmBC,OAAOhB,EAAO,GAEjC,IAAMiB,EAAgB,sBAAOT,GAAP,CAAsBF,EAAgBN,KAC5DO,EAAmBQ,GACnBN,EAAiBQ,IA0BbrB,cAzCgB,SAACI,GAErB,IAAMY,EAAQ,YAAON,GACrBM,EAASI,OAAOhB,EAAO,GACvBO,EAAmBK,MAuCjB,cAAC,EAAD,CAAelB,MAAOc,EAAeN,YAzBrB,SAACF,GACnB,IAAMiB,EAAgB,YAAOT,GAC7BS,EAAiBD,OAAOhB,EAAO,GAE/B,IAAMe,EAAkB,sBAAOT,GAAP,CAAwBE,EAAcR,KAC9DS,EAAiBQ,GACjBV,EAAmBQ,UC7CvBG,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.ef6fcdd2.chunk.js","sourcesContent":["import React from \"react\";\n\n// CSS-in-JS\nconst style = {\n  backgroundColor: \"#c1ffff\",\n  width: \"400px\",\n  height: \"30px\",\n  padding: \"8px\",\n  margin: \"8px\",\n  borderRadius: \"8px\"\n};\n\nexport const InputTodo = (props) => {\n  const { todoText, onChange, onClick, disabled } = props;\n  return (\n    <div style={style}>\n      <input\n        disabled={disabled}\n        placeholder=\"TODOを入力\"\n        value={todoText}\n        onChange={onChange}\n      />\n      <button disabled={disabled} onClick={onClick}>\n        追加\n      </button>\n    </div>\n  );\n};\n","import React from \"react\";\n\nexport const InCompleteTodos = (props) => {\n  const { todos, onClickComplete, onClickDelete } = props;\n  return (\n    <div className=\"incomplete-area\">\n      <p className=\"title\">未完了のTODO</p>\n      <ul>\n        {todos.map((todo, index) => {\n          return (\n            // mapを使用しレンダリングするときはkeyを設定する\n            // 削除ボタン　：　関数に引数を渡していきたいときは、アロー関数で新しく関数を生成する必要がある\n            <div key={todo} className=\"list-row\">\n              <li>{todo}</li>\n              <button onClick={() => onClickComplete(index)}>完了</button>\n              <button onClick={() => onClickDelete(index)}>削除</button>\n            </div>\n          );\n        })}\n      </ul>\n    </div>\n  );\n};\n","import React from \"react\";\n\nexport const CompleteTodos = (props) => {\n  const { todos, onClickBack } = props;\n  return (\n    <div className=\"complete-area\">\n      <p className=\"title\">完了のTODO</p>\n      <ul>\n        {todos.map((todo, index) => {\n          return (\n            <div key={todo} className=\"list-row\">\n              <li>{todo}</li>\n              <button onClick={() => onClickBack(index)}>戻す</button>\n            </div>\n          );\n        })}\n      </ul>\n    </div>\n  );\n};\n","import React, { useState } from \"react\";\nimport \"./styles.css\";\nimport { InputTodo } from \"./Components/InputTodo\";\nimport { InCompleteTodos } from \"./Components/InCompleteTodos\";\nimport { CompleteTodos } from \"./Components/CompleteTodos\";\n\nexport const App = () => {\n  // 入力したTODOのState\n  const [todoText, setTodoText] = useState(\"\");\n  // 未完了のTODOのState\n  const [incompleteTodos, setIncompleteTodos] = useState([]);\n  // 完了のTODOのState\n  const [completeTodos, setCompleteTodos] = useState([]);\n\n  // inputに入力される度に、ステートの値を変更する関数\n  const onChangeTodoText = (event) => setTodoText(event.target.value);\n\n  // 追加ボタンクリック時の処理\n  const onClickAdd = () => {\n    if (todoText === \"\") return;\n    const newTodos = [...incompleteTodos, todoText];\n    setIncompleteTodos(newTodos);\n    setTodoText(\"\");\n  };\n\n  // 削除ボタンクリック時の関数\n  const onClickDelete = (index) => {\n    // スプレッド関数でincompleteTodosの内容をnewTodosにコピー\n    const newTodos = [...incompleteTodos];\n    newTodos.splice(index, 1);\n    setIncompleteTodos(newTodos);\n  };\n\n  // 完了ボタンクリック時の関数\n  const onClickComplete = (index) => {\n    // スプレッド関数でincompleteTodosの内容をnewIncompleteTodosにコピー\n    const newIncompleteTodos = [...incompleteTodos];\n    newIncompleteTodos.splice(index, 1);\n\n    const newCompleteTodos = [...completeTodos, incompleteTodos[index]];\n    setIncompleteTodos(newIncompleteTodos);\n    setCompleteTodos(newCompleteTodos);\n  };\n\n  const onClickBack = (index) => {\n    const newCompleteTodos = [...completeTodos];\n    newCompleteTodos.splice(index, 1);\n\n    const newIncompleteTodos = [...incompleteTodos, completeTodos[index]];\n    setCompleteTodos(newCompleteTodos);\n    setIncompleteTodos(newIncompleteTodos);\n  };\n\n  return (\n    <>\n      <InputTodo\n        todoText={todoText}\n        onChange={onChangeTodoText}\n        onClick={onClickAdd}\n        disabled={incompleteTodos.length >= 5}\n      />\n      {incompleteTodos.length >= 5 && (\n        <p style={{ color: \"red\" }}>登録できるtodo５個まで！</p>\n      )}\n      <InCompleteTodos\n        todos={incompleteTodos}\n        onClickComplete={onClickComplete}\n        onClickDelete={onClickDelete}\n      />\n      <CompleteTodos todos={completeTodos} onClickBack={onClickBack} />\n    </>\n  );\n};\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport { App } from \"./App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}